"""
This type stub file was generated by pyright.
"""

"""This module contains the expressions applicable for CronTrigger's fields."""
__all__ = ("AllExpression", "RangeExpression", "WeekdayRangeExpression", "WeekdayPositionExpression", "LastDayOfMonthExpression")
WEEKDAYS = ...
MONTHS = ...
class AllExpression:
    value_re = ...
    def __init__(self, step=...) -> None:
        ...
    
    def validate_range(self, field_name): # -> None:
        ...
    
    def get_next_value(self, date, field): # -> None:
        ...
    
    def __eq__(self, other) -> bool:
        ...
    
    def __str__(self) -> str:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class RangeExpression(AllExpression):
    value_re = ...
    def __init__(self, first, last=..., step=...) -> None:
        ...
    
    def validate_range(self, field_name): # -> None:
        ...
    
    def get_next_value(self, date, field): # -> None:
        ...
    
    def __eq__(self, other) -> bool:
        ...
    
    def __str__(self) -> str:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class MonthRangeExpression(RangeExpression):
    value_re = ...
    def __init__(self, first, last=...) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class WeekdayRangeExpression(RangeExpression):
    value_re = ...
    def __init__(self, first, last=...) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class WeekdayPositionExpression(AllExpression):
    options = ...
    value_re = ...
    def __init__(self, option_name, weekday_name) -> None:
        ...
    
    def get_next_value(self, date, field): # -> int | None:
        ...
    
    def __eq__(self, other) -> bool:
        ...
    
    def __str__(self) -> str:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class LastDayOfMonthExpression(AllExpression):
    value_re = ...
    def __init__(self) -> None:
        ...
    
    def get_next_value(self, date, field): # -> int:
        ...
    
    def __str__(self) -> str:
        ...
    
    def __repr__(self): # -> str:
        ...
    


